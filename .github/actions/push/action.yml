name: 'Deploy'
description: 'Deploy release assets to desired environment'
inputs:
  GATEWAY_URL:
    description: 'WSD Gateway URL to trigger deployment'
    required: true
  GATEWAY_SECRET:
    description: 'WSD Gateway Secret to sign the payload'
    required: true
runs:
  using: "composite"
  steps:
    - name: Trigger WSD Gateway
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.GATEWAY_SECRET }}
        script: |
          console.log(context)
          const crypto = require('crypto');
          const getHmac = ( key, str ) => crypto.createHmac ( 'sha1', key ).update ( str ).digest ( 'hex' );
          if ( context.payload.ref.match( 'refs/tags/' ) ) {
            const tag = context.payload.ref.replace( 'refs/tags/', '' );
            context.payload.ref = `release/${{ env.ENVIRONMENT }}@${tag}`;
          } else {
            const commit = context.sha;
            context.payload.ref = `release/${{ env.ENVIRONMENT }}@${commit}`;
          }
          console.log(context.payload.ref)
          const body = JSON.stringify( context.payload );
          const response = await fetch( "${{ inputs.GATEWAY_URL }}" , {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "x-hub-signature": 'sha1=' + getHmac ( core.getInput( 'github-token' ) , body ),
              "x-github-event": "push",
            },
            body: body,
          });
          
          const message = await response.text();
          if ( response.status !== 202 ) {
            throw new Error( message );
          } else {
            console.log( message );
          }